from flask import Flask, request, jsonify, render_template_string
from datetime import datetime

app = Flask(__name__)
log_data = []

@app.route('/', defaults={'path': ''}, methods=['GET', 'POST'])
@app.route('/<path:path>', methods=['GET', 'POST'])
def catch_all(path):
    entry = {
        'time': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
        'method': request.method,
        'url': request.url,
        'path': request.path,
        'host': request.headers.get('Host'),
        'x_original_url': request.headers.get('X-Original-URL'),
        'referer': request.headers.get('Referer'),
        'headers': dict(request.headers),
        'body': request.get_data(as_text=True)
    }
    log_data.append(entry)
    print(f"[+] Request captured: {entry['url']}")
    return "Exploit server active. Check /logs for captured requests.", 200

@app.route('/logs')
def show_logs():
    return render_template_string('''
        <h1>ðŸ§¾ Captured Logs</h1>
        {% for log in logs %}
            <hr>
            <p><b>{{ log.time }}</b> - <code>{{ log.method }} {{ log.path }}</code></p>
            <p><b>Host:</b> {{ log.host }}</p>
            <p><b>X-Original-URL:</b> {{ log.x_original_url }}</p>
            <p><b>Referer:</b> {{ log.referer }}</p>
            <p><b>Full URL:</b> {{ log.url }}</p>
            <p><b>Body:</b> <pre>{{ log.body }}</pre></p>
            <p><b>Headers:</b><br><pre>{{ log.headers | tojson(indent=2) }}</pre></p>
        {% endfor %}
    ''', logs=log_data[-50:])  # Show only last 50 logs

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8000)
