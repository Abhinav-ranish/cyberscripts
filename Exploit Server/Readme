
# üîç Exploit Server ‚Äì Header & Request Logger

A lightweight Flask server to capture and inspect HTTP request data, especially useful for:

* Host header injection
* Password reset poisoning
* X-Original-URL exploitation
* Referer-based CSRF analysis

---

## üì¶ Features

* Logs all HTTP requests (`GET`, `POST`) to **any path**
* Displays headers: `Host`, `X-Original-URL`, `Referer`, and more
* View recent logs at `/logs`
* Lightweight, portable, and easy to host or run locally

---

## üöÄ How to Run Locally

### 1. Clone or copy the code

Save the script as `exploit_server.py`.

### 2. Install dependencies

```bash
pip install flask
```

### 3. Run the server

```bash
python exploit_server.py
```

By default, it runs on:

```
http://localhost:8000
```

---

## üß™ Usage

You can now send any HTTP request to this server. It will:

* Log the method, headers, and body
* Capture sensitive headers like `Host`, `Referer`, and `X-Original-URL`
* Store and show up to 50 latest requests at `http://localhost:8000/logs`

### Example with `curl`:

```bash
curl -X POST http://localhost:8000/reset \
  -H "Host: victim.com" \
  -H "X-Original-URL: /admin" \
  -H "Referer: https://evil.com/phish" \
  -d "temp-forgot-password-token=abc123"
```

Then visit:

```
http://localhost:8000/logs
```

---

## üåç Expose to the Web (2 Easy Options)

---

### ‚úÖ Option 1: Use [Ngrok](https://ngrok.com)

**Step 1: Install Ngrok**

```bash
brew install ngrok  # Mac
sudo apt install ngrok  # Linux
```

**Step 2: Run Ngrok on port 8000**

```bash
ngrok http 8000
```

**Step 3: Use the generated public URL**
You‚Äôll get a link like:

```
https://abc123.ngrok.io
```

Now you can use this in your attack payloads (e.g., Host header or poisoned password reset links).

---

### ‚úÖ Option 2: Deploy to [Render.com](https://render.com) (Free tier works)

1. Create a free account.
2. Click **"New Web Service"** ‚Üí Connect your GitHub repo.
3. Set:

   * Runtime: Python
   * Start command: `python exploit_server.py`
   * Build command: `pip install flask`
   * Port: `8000`
4. Deploy and get a public domain like:

```
https://exploit-server.onrender.com
```

---

## üßº Notes & Tips

* This server **does not sanitize logs**, so avoid exposing it to untrusted users.
* Ideal for internal lab work, Burp Suite labs, or controlled demos.
* You can easily add file logging if needed.

---

## üõ°Ô∏è Legal Warning

This tool is intended **for educational, ethical, and authorized use only**. Do not use it against systems without explicit permission.

